#include <iostream>

// ポインタは整数で、メモリアドレスを保存するための数字です。
// ポインタは単なるアドレスであり、メモリアドレスを格納する整数です。
// ポインタはアドレスを保持する変数であり、一種の整数です。
// ポインタ自体も変数であり、それらの変数もメモリに保存されます。ダブルポインタやトリプルポインタも可能です。
// 通常の変数は「自分自身の値を保持」しますが、ポインタは「他人の値」や「動的メモリ」にアクセス・操作できる汎用ツールです。

#define LOG(x) std::cout << x << std::endl; //define 名前 置き換える内容

int main()
{
	char* buffer = new char[8];  // new を使ってヒープメモリ上に 8 バイトの char 配列を動的に確保し、そのアドレスをポインタ buffer に保存する
	memset(buffer, 0, 8);        // buffer の内容を 0 で初期化する

	char** buffer2 = &buffer;    // buffer のアドレスを buffer2 に代入（ダブルポインタ）

	delete[] buffer;             // 確保したメモリを解放する（delete[] を忘れるとメモリリーク）

	int var = 8;                 // 整数変数 var を 8 で初期化する
	int* ptr = &var;             // var のアドレスを ptr に保存する（ポインタ）
	*ptr = 10;                   // ポインタ ptr をデリファレンスして、参照先の値を 10 に変更する

	LOG(var);                    
	std::cin.get();              
}
